@page "/traces"
@page "/traces/resource/{applicationName}"

@using Aspire.Dashboard.Model
@using Aspire.Dashboard.Otlp.Model
@using Aspire.Dashboard.Resources
@using Aspire.Dashboard.Utils
@using System.Globalization
@using Aspire.Dashboard.Components.Controls.Grid
@inject IJSRuntime JS
@inject IStringLocalizer<Dashboard.Resources.Traces> Loc
@inject IStringLocalizer<StructuredFiltering> FilterLoc
@inject IStringLocalizer<ControlsStrings> ControlsStringsLoc
@implements IDisposable

<PageTitle><ApplicationName ResourceName="@nameof(Dashboard.Resources.Traces.TracesPageTitle)" Loc="@Loc" /></PageTitle>

<div class="page-content-container">
    <AspirePageContentLayout AddNewlineOnToolbar="true" @ref="@_contentLayout">
        <PageTitleSection>
            <h1 class="page-header">@Loc[nameof(Dashboard.Resources.Traces.TracesHeader)]</h1>
        </PageTitleSection>
        <ToolbarSection>
            <ResourceSelect Resources="_applicationViewModels"
                            AriaLabel="@ControlsStringsLoc[nameof(ControlsStrings.SelectAnApplication)]"
                            @bind-SelectedResource="PageViewModel.SelectedApplication"
                            @bind-SelectedResource:after="HandleSelectedApplicationChanged"
                            CanSelectGrouping="true" />
            <FluentSearch @bind-Value="_filter"
                          @bind-Value:after="HandleAfterFilterBindAsync"
                          Immediate="true"
                          ImmediateDelay="@FluentUIExtensions.InputDelay"
                          Placeholder="@ControlsStringsLoc[nameof(ControlsStrings.FilterPlaceholder)]"
                          title="@Loc[nameof(Dashboard.Resources.Traces.TracesNameFilter)]"
                          slot="end" />
            <FluentDivider slot="end" Role="DividerRole.Presentation" Orientation="Orientation.Vertical" />
            <FluentLabel slot="end">@FilterLoc[nameof(StructuredFiltering.Filters)]</FluentLabel>
            @if (TracesViewModel.Filters.Count == 0)
            {
                <span slot="end">@FilterLoc[nameof(StructuredFiltering.NoFilters)]</span>
            }
            else
            {
                for (var i = 0; i < TracesViewModel.Filters.Count; i++)
                {
                    var filter = TracesViewModel.Filters[i];
                    if (i != 0)
                    {
                        <FluentDivider slot="end" Role="DividerRole.Presentation" Orientation="Orientation.Vertical" />
                    }
                    <FluentButton slot="end" Appearance="Appearance.Outline" OnClick="() => OpenFilterAsync(filter)" class="telemetry-filter-button" title="@filter.GetDisplayText(FilterLoc)">@filter.GetDisplayText(FilterLoc)</FluentButton>
                }
            }
            <FluentDivider slot="end" Role="DividerRole.Presentation" Orientation="Orientation.Vertical" />
            @if (ViewportInformation.IsDesktop)
            {
                <FluentButton slot="end" Appearance="Appearance.Stealth" aria-label="@FilterLoc[nameof(StructuredFiltering.AddFilter)]" OnClick="() => OpenFilterAsync(null)"><FluentIcon Value="@(new Icons.Regular.Size20.Filter())" /></FluentButton>
            }
            else
            {
                <FluentButton slot="end" Appearance="Appearance.Stealth" aria-label="@FilterLoc[nameof(StructuredFiltering.AddFilter)]" OnClick="() => OpenFilterAsync(null)">
                    <FluentIcon Class="align-text-bottom" Value="@(new Icons.Regular.Size20.Filter())" /> @FilterLoc[nameof(StructuredFiltering.AddFilter)]
                </FluentButton>
            }
        </ToolbarSection>
        <MainSection>
            <div class="datagrid-overflow-area continuous-scroll-overflow" tabindex="-1">
                <GridColumnManager @ref="_manager" Columns="@_gridColumns">
                    <FluentDataGrid @ref="_dataGrid"
                                    ResizeLabel="@AspireFluentDataGridHeaderCell.GetResizeLabel(ControlsStringsLoc)"
                                    ResizeType="DataGridResizeType.Discrete"
                                    Virtualize="true"
                                    GenerateHeader="GenerateHeaderOption.Sticky"
                                    ItemSize="46"
                                    ResizableColumns="true"
                                    ItemsProvider="@GetData"
                                    TGridItem="ItemResult<OtlpTrace>"
                                    GridTemplateColumns="@_manager.GetGridTemplateColumns()"
                                    ShowHover="true"
                                    ItemKey="@(r => r.Item.TraceId)"
                                    OnRowClick="@(r => r.ExecuteOnDefault(d => NavigationManager.NavigateTo(DashboardUrls.TraceDetailUrl(d.Item.TraceId))))"
                                    Class="main-grid enable-row-click">
                        <ChildContent>
                            <AspireTemplateColumn ColumnId="@TimestampColumn" ColumnManager="@_manager" Title="@ControlsStringsLoc[nameof(ControlsStrings.TimestampColumnHeader)]" TooltipText="@(context => FormatHelpers.FormatDateTime(TimeProvider, context.Item.FirstSpan.StartTime, MillisecondsDisplay.Full, CultureInfo.CurrentCulture))" Tooltip="true" Class="expand-col">
                                <span @onclick:stopPropagation="true" class="main-grid-expand-container @(!context.Expanded ? "main-grid-collapsed" : "main-grid-expanded")">
                                    @if (context.GroupCount > 1 || context.Expanded)
                                    {
                                        <FluentButton Appearance="Appearance.Lightweight" Class="main-grid-expand-button" OnClick="@(() => OnToggleCollapse(context))">
                                            <FluentIcon Icon="Icons.Regular.Size12.ChevronRight" Color="Color.Neutral" />
                                        </FluentButton>
                                    }
                                </span>
                                @if (context.GroupCount > 1 || context.Expanded)
                                {
                                    <FluentBadge Appearance="Appearance.Neutral" Circular="true" Style="margin-right: 8px">
                                        @context.GroupCount
                                    </FluentBadge>
                                }
                                <span style="margin-left: @(context.HasParent ? "16px" : "0")">
                                    @FormatHelpers.FormatTimeWithOptionalDate(TimeProvider, context.Item.FirstSpan.StartTime, MillisecondsDisplay.Truncated)
                                </span>
                            </AspireTemplateColumn>
                            <AspireTemplateColumn ColumnId="@NameColumn" ColumnManager="@_manager" Title="@ControlsStringsLoc[nameof(ControlsStrings.NameColumnHeader)]" Tooltip="true" TooltipText="@(trace => GetNameTooltip(trace.Item))">
                                <span style="padding-left:5px; border-left-width: 5px; border-left-style: solid; border-left-color: @(ColorGenerator.Instance.GetColorHexByKey(GetResourceName((context.Item.RootSpan ?? context.Item.FirstSpan).Source)));">
                                    <FluentHighlighter HighlightedText="@(TracesViewModel.FilterText)" Text="@(context.Item.FullName)" />
                                </span>
                                <span class="trace-id">@OtlpHelpers.ToShortenedId(context.Item.TraceId)</span>
                            </AspireTemplateColumn>
                            <AspireTemplateColumn ColumnId="@SpansColumn" ColumnManager="@_manager" Title="@Loc[nameof(Dashboard.Resources.Traces.TracesSpansColumnHeader)]">
                                <FluentOverflow>
                                    <ChildContent>
                                        @foreach (var item in TraceHelpers.GetOrderedApplications(context.Item))
                                        {
                                            <FluentOverflowItem>
                                                <span class="trace-tag trace-service-tag" title="@(GetSpansTooltip(item))" style="border-left-color: @(ColorGenerator.Instance.GetColorHexByKey(GetResourceName(item.Application)));">
                                                    @if (item.ErroredSpans > 0)
                                                    {
                                                        <FluentIcon Icon="Icons.Filled.Size12.ErrorCircle" Color="Color.Error" Class="trace-tag-icon" />
                                                    }
                                                    @GetResourceName(item.Application) (@item.TotalSpans)
                                                </span>
                                            </FluentOverflowItem>
                                        }
                                    </ChildContent>
                                    <MoreButtonTemplate Context="overflow">
                                        <span class="trace-tag">
                                            @($"+{overflow.ItemsOverflow.Count()}")
                                        </span>
                                    </MoreButtonTemplate>
                                    <OverflowTemplate Context="overflow">
                                        @{
                                            var items = overflow.ItemsOverflow.ToList();
                                        }
                                        <FluentTooltip UseTooltipService="false" Anchor="@overflow.IdMoreButton">
                                            @foreach (var item in items)
                                            {
                                                <div style="margin-top: 8px; margin-bottom: 8px;">
                                                    @item.ChildContent
                                                </div>
                                            }
                                        </FluentTooltip>
                                    </OverflowTemplate>
                                </FluentOverflow>
                            </AspireTemplateColumn>
                            <AspireTemplateColumn ColumnId="@DurationColumn" ColumnManager="@_manager" Title="@ControlsStringsLoc[nameof(ControlsStrings.DurationColumnHeader)]">
                                <div class="duration-container">
                                    @if (ViewportInformation.IsDesktop)
                                    {
                                        <FluentProgressRing Class="duration-ring"
                                                            Min="0"
                                                            Max="@Convert.ToInt32(TracesViewModel.MaxDuration.TotalMilliseconds)"
                                                            Value="@Convert.ToInt32(context.Item.Duration.TotalMilliseconds)"
                                                            aria-label="@ControlsStringsLoc[nameof(ControlsStrings.DurationColumnHeader)]" />
                                        <span class="trace-duration">
                                            @DurationFormatter.FormatDuration(context.Item.Duration)
                                        </span>
                                    }
                                    else
                                    {
                                        @DurationFormatter.FormatDuration(context.Item.Duration)
                                    }
                                </div>
                            </AspireTemplateColumn>
                            <AspireTemplateColumn ColumnId="@ActionsColumn" ColumnManager="@_manager" Title="@ControlsStringsLoc[nameof(ControlsStrings.ActionsColumnHeader)]" Class="no-ellipsis">
                                <div class="grid-action-container" @onclick:stopPropagation="true">
                                    <TraceActions Trace="@context.Item" />
                                </div>
                            </AspireTemplateColumn>
                        </ChildContent>
                        <EmptyContent>
                            <FluentIcon Icon="Icons.Regular.Size24.GanttChart" />&nbsp;@Loc[nameof(Dashboard.Resources.Traces.TracesNoTraces)]
                        </EmptyContent>
                    </FluentDataGrid>
                </GridColumnManager>
            </div>
        </MainSection>
        <FooterSection>
            <TotalItemsFooter @ref="_totalItemsFooter" />
        </FooterSection>
    </AspirePageContentLayout>
</div>
