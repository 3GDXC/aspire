@namespace Aspire.Dashboard.Components

@using Aspire.Dashboard.Otlp.Model
@using Aspire.Dashboard.Resources
@using Metrics = Aspire.Dashboard.Components.Pages.Metrics
@using Aspire.Dashboard.Components.Controls.Chart
@inject IStringLocalizer<ControlsStrings> Loc

@if (_instrument is null)
{
    <div>@Loc[nameof(ControlsStrings.ChartContainerUnableToDisplay)]</div>
}
else
{
    <div class="metrics-chart">
        @{
            // eventually split out into separate component than chartcontainer
            var headerPadding = IsDashpageChart ? "0" : "40px";
        }

        <div class="metrics-chart-header" style="@($"padding-left: {headerPadding}")">
            @if (IsDashpageChart)
            {
                <h4 style="text-overflow: ellipsis">@_instrument.Name</h4>
                <p>@_instrument.Description</p>
            }
            else
            {
                <h3>@_instrument.Name</h3>
                <p>@_instrument.Description</p>
            }
        </div>

        @if (!IsDashpageChart)
        {
            <FluentTabs ActiveTabId="@($"tab-{ActiveView}")" OnTabChange="@OnTabChangeAsync">
                <FluentTab LabelClass="tab-label"
                           Id="@($"tab-{Metrics.MetricViewKind.Graph}")"
                           aria-label="@Loc[nameof(ControlsStrings.ChartContainerGraphAccessibleLabel)]"
                           Label="@Loc[nameof(ControlsStrings.ChartContainerGraphTab)]"
                           Icon="@(new Icons.Regular.Size24.DataArea())">
                    <ChartWrapper Applications="@Applications"
                                  Duration="@Duration"
                                  Instrument="@_instrument"
                                  InstrumentViewModel="@_instrumentViewModel"
                                  DimensionFilters="@DimensionFilters"/>
                </FluentTab>
                <FluentTab LabelClass="tab-label"
                           Id="@($"tab-{Metrics.MetricViewKind.Table}")"
                           Label="@Loc[nameof(ControlsStrings.ChartContainerTableTab)]"
                           Icon="@(new Icons.Regular.Size24.Table())">
                    <MetricTableWrapper Applications="@Applications"
                                        Duration="@Duration"
                                        Instrument="@_instrument"
                                        InstrumentViewModel="@_instrumentViewModel"
                                        DimensionFilters="@DimensionFilters"/>
                </FluentTab>
            </FluentTabs>
        }
        else
        {
            if (ActiveView is Metrics.MetricViewKind.Graph)
            {
                <ChartWrapper Applications="@Applications"
                              Duration="@Duration"
                              Instrument="@_instrument"
                              InstrumentViewModel="@_instrumentViewModel"
                              DimensionFilters="@DimensionFilters"/>
            }
            else
            {
                <MetricTableWrapper Applications="@Applications"
                                    Duration="@Duration"
                                    Instrument="@_instrument"
                                    InstrumentViewModel="@_instrumentViewModel"
                                    DimensionFilters="@DimensionFilters"/>
            }
        }
    </div>
}

@code {
    [Parameter, EditorRequired]
    public required Metrics.MetricViewKind ActiveView { get; set; }

    [Parameter, EditorRequired]
    public required Func<Metrics.MetricViewKind, Task> OnViewChangedAsync { get; set; }

    [Parameter]
    public required List<OtlpApplication> Applications { get; set; }

    [Parameter]
    public bool IsDashpageChart { get; set; }
}
